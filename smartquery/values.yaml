# Default values for smartQuery.

replicaCount: 1

image:
  repository: commerceexperts/smartquery-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion, if needed
  tag: ""

env: []
#  - name: SH_API_KEY
#    value: "<YourS3cr3tAPIkey>"
#    valueFrom:
#      secretKeyRef:
#        key: key
#        name: searchhub-key
#  - name: JAVA_OPTS
#    value: "-XX:MaxRAMPercentage=90.0 -XX:+HeapDumpOnOutOfMemoryError -Dsun.net.inetaddr.ttl=30 -Dsmartquery.updateRateInSeconds=60"
#  - name: SH_INIT_TENANTS
#    value: "example.num1,example.num2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8081

ingress:
  enabled: false
  className: "nginx"
  annotations:
#    kubernetes.io/ingress.class: nginx for older k8s versions
#    cert-manager.io/acme-challenge-type: http01
#    cert-manager.io/issuer: letsencrypt-prod
  hosts:
    - host: smartquery-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: smartquery-example-tls
  #    hosts:
  #      - smartquery-example.local

resources:
  # The following resource limits are our recommendations for mid-size customers
    limits:
      cpu: "1"
      memory: 1Gi
    requests:
        cpu: 750m
        memory: 1Gi

updateStrategy: {}
#  rollingUpdate:
#    maxSurge: 1
#    maxUnavailable: 1
#  type: RollingUpdate

# Note that memory utilization for autoscaling makes no sense in smartQuery context,
# so we target CPU for autoscaling
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# Prometheus ServiceMonitor based monitoring
# See https://github.com/prometheus-operator/prometheus-operator/tree/main
monitoring:
  enabled: false
  namespace: monitoring
  annotations:
#    meta.helm.sh/release-name: prometheus
#    meta.helm.sh/release-namespace: monitoring


nodeSelector: {}

tolerations: []

affinity: {}
